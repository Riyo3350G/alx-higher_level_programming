Test cases for 2-matrix_divided
===================================

The 0-matrix_divided module takes a matrix of floats and ints and a divider as arguments and returns a new matrix

Usage
=====

Importing funct from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests normal
    >>> m = [[2, 4, 6],[8, 10, 12]]
    >>> matrix_divided(m, 2)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Tests unmodified matrix
    >>> m = [[2, 4, 6],[8, 10, 12]]
    >>> matrix_divided(m, 2)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
    >>> print(m)
    [[2, 4, 6], [8, 10, 12]]

Tests empty matrix
    >>> matrix_divided([], 2)
    Traceback (most recent call last):
                  ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Tests different size rows
    >>> m = [[4, 6],[8, 10, 12]]
    >>> matrix_divided(m, 2)
    Traceback (most recent call last):
                  ...
    TypeError: Each row of the matrix must have the same size

Test case div == 0
    >>> m = [[2, 4, 6],[8, 10, 12]]
    >>> matrix_divided(m, 0)
    Traceback (most recent call last):
                  ...
    ZeroDivisionError: division by zero

Test case matrix string
    >>> matrix = "not a list"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
		  ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 1st arg None:
    >>> matrix_divided(none, 1)
    Traceback: (most recent call last):
        ...
    NameError: Name 'none' is not defined.

Test missing one arguments
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test missing 2 arguments
    >>> matrix_divided()
    Traceback: (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'.

Test division by inf:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test div string:
   >>> matrix_divided([[3,9], [12, 15]], "string")
   Traceback (most recent call last):
          ...
   TypeError: div must be a number

